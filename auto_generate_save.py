\nfrom typing import List, Union, Sequence\n\ndef sum_numbers(numbers: Sequence[Union[int, float]]) -> Union[int, float]:\n    """\n    Calculates the sum of a list of numbers.\n\n    Args:\n        numbers: A sequence of numbers (integers or floats).\n\n    Returns:\n        The sum of the numbers in the input sequence.\n        Returns 0 if the input sequence is empty.\n        Raises TypeError if the input is not a sequence or if the sequence contains non-numeric elements.\n    """\n    if not isinstance(numbers, Sequence):\n        raise TypeError("Input must be a sequence.")\n\n    total = 0\n    for num in numbers:\n        if not isinstance(num, (int, float)):\n            raise TypeError("Sequence elements must be numbers (int or float).")\n        total += num\n    return total\n\n